// Form control focus state
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `$input-focus-border-color` variable.
//
// We highly encourage you to not customize the default value, but instead use
// this to tweak colors on an as-needed basis. This aesthetic change is based on
// WebKit's default styles, but applicable to a wider range of browsers. Its
// usability and accessibility should be taken into account with any change.
//
// Example usage: change the default blue border and shadow to white for better
// contrast against a dark gray background.



@mixin form-validation-state($state, $color) {
	.#{$state}-feedback {
		display: none;
		width: 100%;
		color: $color;
	}

	.#{$state}-tooltip {
		position: absolute;
		top: 100%;
		z-index: 5;
		display: none;
		max-width: 100%; // Contain to parent when possible
		margin-top: .1rem;
	}

	.form-control {
		.was-validated &:#{$state},
		&.is-#{$state} {
			border-color: $color;

			&:focus {
				border-color: $color;
				box-shadow: rgba($color, .25);
			}

			~ .#{$state}-feedback,
			~ .#{$state}-tooltip {
				display: block;
			}
		}
	}


	.form-control-file {
		.was-validated &:#{$state},
		&.is-#{$state} {
			~ .#{$state}-feedback,
			~ .#{$state}-tooltip {
				display: block;
			}
		}
	}

	.form-check-input {
		.was-validated &:#{$state},
		&.is-#{$state} {
			~ .form-check-label {
				color: $color;
			}

			~ .#{$state}-feedback,
			~ .#{$state}-tooltip {
				display: block;
			}
		}
	}

	.custom-control-input {
		.was-validated &:#{$state},
		&.is-#{$state} {
			~ .custom-control-label {
				color: $color;

				&::before {
					background-color: lighten($color, 25%);
				}
			}

			~ .#{$state}-feedback,
			~ .#{$state}-tooltip {
				display: block;
			}
		}
	}
}